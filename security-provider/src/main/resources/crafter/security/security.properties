#
# Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# If security is enabled (basically if RequestSecurityFilter should be executed)
crafter.security.enabled=true

# Ant path patterns, separated by comma, that indicate which URLs should be be included in security processing, even if they
# also match the patters in urlsToExclude
crafter.security.urlsToInclude=
# Ant path patterns, separated by comma, that indicate which URLs should be be excluded from security processing
crafter.security.urlsToExclude=/static-assets/**

# The default tenant names that the application uses
crafter.security.tenant.default.names=default

# How much authentications can the cache keep in memory before the oldest one is evicted
crafter.security.authentication.cache.maxElementsInMemory=1000
# How much time authentications can stay idle before being evicted (secs)
crafter.security.authentication.cache.timeToIdle=300
# The value used to verify the origin on Mellon headers
crafter.security.authentication.headers.token=SECURE_KEY_VALUE

# How much time before the ticket cookie is expired in the browser, in seconds (-1 means when the browser closes)
crafter.security.cookie.ticket.maxAge=-1
# The path to which the cookie will be visible by the client
crafter.security.cookie.ticket.path=/
# Indicates whether the cookie should be only sent using a secure protocol, like HTTPS or SSL
crafter.security.cookie.ticket.secure=false
# If true, the cookie will be sent with an HttpOnly attribute, which tells the browser that it's not supposed to
# be exposed to client-side scripting code
crafter.security.cookie.ticket.httpOnly=true
# How much time before the profile last modified cookie is expired in the browser, in seconds (-1 means when the
# browser closes)
crafter.security.cookie.profileLastModified.maxAge=-1
# The path to which the cookie will be visible by the client
crafter.security.cookie.profileLastModified.path=/
# Indicates whether the cookie should be only sent using a secure protocol, like HTTPS or SSL
crafter.security.cookie.profileLastModified.secure=false
# If true, the cookie will be sent with an HttpOnly attribute, which tells the browser that it's not supposed to
# be exposed to client-side scripting code
crafter.security.cookie.profileLastModified.httpOnly=true
# How much time before the remember me cookie is expired in the browser, in seconds
crafter.security.cookie.rememberMe.maxAge=1296000
# The path to which the cookie will be visible by the client
crafter.security.cookie.rememberMe.path=/
# Indicates whether the cookie should be only sent using a secure protocol, like HTTPS or SSL
crafter.security.cookie.rememberMe.secure=false
# If true, the cookie will be sent with an HttpOnly attribute, which tells the browser that it's not supposed to
# be exposed to client-side scripting code
crafter.security.cookie.rememberMe.httpOnly=true

# The URL of the login form page
crafter.security.login.form.url=/login
# URL to redirect if the login was successful and the user couldn't be redirected to the previous page
crafter.security.login.success.url=/
# If after successful login always redirect to crafter.security.login.success.url
crafter.security.login.success.alwaysUseDefaultUrl=false
# The URL to redirect if the login fails
crafter.security.login.failure.url=/login?login_error=true
# The URL to redirect after a successful logout
crafter.security.logout.success.url=/
# The URL to show when access has been denied to a user to a certain resource
crafter.security.accessDenied.error.url=/access-denied
